Generic PCIExpress-to-PCI Bridge
================================

Description
===========
PCIE-to-PCI bridge is a new method for legacy PCI
hierarchies creation on Q35 machines.

Previously Intel DMI-to-PCI bridge was used for this purpose.
But due to its strict limitations - no support of hot-plug,
no cross-platform and cross-architecture support - a new generic
PCIE-to-PCI bridge should now be used for any legacy PCI device usage
with PCI Express machine.

This generic PCIE-PCI bridge is a cross-platform device,
can be hot-plugged into appropriate root port (requires additional actions, 
see 'PCIE-PCI bridge hot-plug' section),
and supports devices hot-plug into the bridge itself 
(with some limitations, see below).

Hot-plug of legacy PCI devices into the bridge
is provided by bridge's built-in Standard hot-plug Controller.
Though it still has some limitations, see 'Limitations' below.

PCIE-PCI bridge hot-plug
=======================
As opposed to Windows, Linux guest requires extra efforts to
enable PCIE-PCI bridge hot-plug.
Motivation - now on init any PCI Express root port which doesn't have
any device plugged in, has no free buses reserved to provide any of them
to a hot-plugged devices in future.

To solve this problem we reserve additional buses on a firmware level. 
Currently only SeaBIOS is supported.
The way of bus number to reserve delivery is special
Red Hat vendor-specific PCI capability, added to the root port
that is planned to have PCIE-PCI bridge hot-plugged in.

Capability layout (defined in include/hw/pci/pci_bridge.h):

    uint8_t id;     Standard PCI capability header field
    uint8_t next;   Standard PCI capability header field
    uint8_t len;    Standard PCI vendor-specific capability header field
    
    uint8_t type;   Red Hat vendor-specific capability type
                    List of currently existing types:
                        QEMU = 1
    
    uint16_t non_pref_16;	Non-prefetchable memory limit

    uint8_t bus_res;    Minimum number of buses to reserve
    
    uint8_t io_8;       IO space limit in case of 8-bit value
    uint32_t io_32;     IO space limit in case of 32-bit value
                        This two values are mutually exclusive,
                        i.e. they can't both be  >0.

    uint32_t pref_32;   Prefetchable memory limit in case of 32-bit value
    uint64_t pref_64;   Prefetchable memory limit in case of 64-bit value
                        This two values are mutually exclusive (just as IO limit),
                        i.e. they can't both be  >0.

Memory limits are unused now, in future they are planned
to be used for providing similar hints to the firmware.

At the moment this capability is used only in
QEMU generic PCIE root port (-device pcie-root-port).
Capability construction function takes bus range value
from root ports' common property 'bus_reserve'.
By default it is set to 0 to leave root port's default
behavior unchanged.

Usage
=====
A detailed command line would be:

[qemu-bin + storage options]
-m 2G
-device ioh3420,bus=pcie.0,id=rp1
-device ioh3420,bus=pcie.0,id=rp2
-device pcie-root-port,bus=pcie.0,id=rp3,bus-reserve=1
-device pcie-pci-bridge,id=br1,bus=rp1
-device pcie-pci-bridge,id=br2,bus=rp2
-device e1000,bus=br1,addr=8

Then in monitor it's OK to do:
device_add pcie-pci-bridge,id=br3,bus=rp3
device_add e1000,bus=br2,addr=1
device_add e1000,bus=br3,addr=1

Here you have:
 (1) Cold-plugged:
    - Root ports: 1 QEMU generic root port with the capability mentioned above, 
                  2 ioh3420 root ports;
    - 2 PCIE-PCI bridges plugged into 2 different root ports;
    - e1000 plugged into the first bridge.
 (2) Hot-plugged:
    - PCIE-PCI bridge, plugged into QEMU generic root port;
    - 2 e1000 cards, one plugged into the cold-plugged PCIE-PCI bridge, 
                     another plugged into the hot-plugged bridge.

Limitations
===========
The PCIE-PCI bridge can be hot-plugged only into pcie-root-port that
has proper 'bus_reserve' property value to provide secondary bus for the hot-plugged bridge.

Windows 7 and older versions don't support hot-plug devices into the PCIE-PCI bridge.
To enable device hot-plug into the bridge on Linux there're 3 ways:
1) Build shpchp module with this patch http://www.spinics.net/lists/linux-pci/msg63052.html
2) Wait until the kernel patch mentioned above get merged into upstream - 
    it's expected to happen in 4.14.
3) set 'msi_enable' property to false - this forced the bridge to use legacy INTx,
    which allows the bridge to notify the OS about hot-plug event without having
    BUSMASTER set.

Implementation
==============
The PCIE-PCI bridge is based on PCI-PCI bridge,
but also accumulates PCI Express features 
as a PCI Express device (is_express=1).

